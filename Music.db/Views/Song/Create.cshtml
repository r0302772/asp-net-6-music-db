@model Music.db.ViewModels.Song.CreateSongViewModel

@{
	ViewData["Title"] = "Create a Song";
}
<!-- Button trigger modal -->
<button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#createSongModal">
	Create Modal
</button>

<!-- Modal -->
<div class="modal fade modal-dialog modal-dialog-centered" id="createSongModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="createSongModalLabel">Create a Song</h1>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<form asp-action="Create">
				<div class="modal-body">
					<div asp-validation-summary="ModelOnly" class="text-danger"></div>
					<div class="row pb-1">
						<div class="col-md-6">
							<div class="input-group mb-2">
								<span class="input-group-text"><label asp-for="Title" class="control-label "></label></span>
								<input asp-for="Title" class="form-control">
							</div>
							<div class="pb-2">
								<span asp-validation-for="Title" class="text-danger"></span>
							</div>
						</div>
						<div class="col-md-6">
							<div class="input-group mb-2">
								<span class="input-group-text">
									<label asp-for="GenreId" class="control-label"></label>
								</span>
								<select asp-for="GenreId" asp-items="Model.Genres" class="form-control">
									<option selected disabled>Select a genre</option>
								</select>
							</div>
							<div class="pb-2">
								<span asp-validation-for="GenreId" class="text-danger"></span>
								<span asp-validation-for="Genres" class="text-danger"></span>
							</div>
						</div>
					</div>
				</div>

				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
					<button type="submit" class="btn btn-primary">Create</button>
				</div>
			</form>
		</div>
	</div>
</div>

<button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#createSongoffcanvas" aria-controls="createSongoffcanvas">
	Create offcanvas
</button>

<div class="offcanvas offcanvas-end" tabindex="-1" id="createSongoffcanvas" aria-labelledby="offcanvasRightLabel">
	<div class="offcanvas-header">
		<h5 class="offcanvas-title" id="offcanvasRightLabel">Create a Song</h5>
		<button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
	</div>
	<div class="offcanvas-body">
		<form asp-action="Create">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="row pb-1">
				<div class="input-group mb-2">
					<span class="input-group-text"><label asp-for="Title" class="control-label "></label></span>
					<input asp-for="Title" class="form-control">
				</div>
				<div class="pb-2">
					<span asp-validation-for="Title" class="text-danger"></span>
				</div>

				<div class="input-group mb-2">
					<span class="input-group-text">
						<label asp-for="GenreId" class="control-label"></label>
					</span>
					<select asp-for="GenreId" asp-items="Model.Genres" class="form-control">
						<option selected disabled>Select a genre</option>
					</select>
				</div>
				<div class="pb-2">
					<span asp-validation-for="GenreId" class="text-danger"></span>
					<span asp-validation-for="Genres" class="text-danger"></span>
				</div>
			</div>

			<hr />

			<button type="button" class="btn btn-secondary" data-bs-dismiss="offcanvas">Cancel</button>
			<button type="submit" class="btn btn-primary">Create</button>
		</form>
	</div>
</div>


@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}